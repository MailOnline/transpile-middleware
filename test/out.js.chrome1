function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function test() {
    var _this = this;

    var x = function () {
        return {
            a: 1,
            b: 2,
            c: _this
        };
    };

    var _x = x();

    var a = _x.a;
    var b = _x.b;

    console.log('' + (a + b));
    var q = _defineProperty({
        a: a
    }, b, 'bb');
    console.log(q);
}

function atest() {
    return new Promise(function ($return, $error) {
        var _this2 = this;

        var a = function () {
            return new Promise(function ($return, $error) {
                return $return(2);
            }.$asyncbind(_this2));
        };
        return a().then($return, $error);
    }.$asyncbind(this));
}
